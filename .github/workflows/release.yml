name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  actions: read

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Run tests
      run: dotnet test --configuration Release
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish Linux x64
      run: dotnet publish --configuration Release --runtime linux-x64 --self-contained true --output ./release/ecengine-linux-x64
      
    - name: Publish Windows x64
      run: dotnet publish --configuration Release --runtime win-x64 --self-contained true --output ./release/ecengine-win-x64
      
    - name: Publish macOS x64
      run: dotnet publish --configuration Release --runtime osx-x64 --self-contained true --output ./release/ecengine-osx-x64
      
    - name: Publish macOS ARM64
      run: dotnet publish --configuration Release --runtime osx-arm64 --self-contained true --output ./release/ecengine-osx-arm64
      
    - name: Create Linux archive
      run: tar -czf ecengine-linux-x64.tar.gz -C ./release ecengine-linux-x64
      
    - name: Create Windows archive
      run: zip -r ecengine-win-x64.zip ./release/ecengine-win-x64
      
    - name: Create macOS x64 archive
      run: tar -czf ecengine-osx-x64.tar.gz -C ./release ecengine-osx-x64
      
    - name: Create macOS ARM64 archive
      run: tar -czf ecengine-osx-arm64.tar.gz -C ./release ecengine-osx-arm64
      
    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: ECEngine ${{ steps.tag.outputs.tag }}
        body: |
          ## ECEngine ${{ steps.tag.outputs.tag }}
          
          ### Features
          - ✅ JavaScript expression evaluation
          - ✅ Console.log support
          - ✅ Arithmetic operations (+, -, *, /)
          - ✅ Function calls and member access
          - ✅ Comprehensive error reporting with source locations
          
          ### Downloads
          - **Linux x64**: `ecengine-linux-x64.tar.gz`
          - **Windows x64**: `ecengine-win-x64.zip`
          - **macOS x64**: `ecengine-osx-x64.tar.gz`
          - **macOS ARM64**: `ecengine-osx-arm64.tar.gz`
          
          ### Usage
          ```bash
          # Extract and run
          ./ECEngine
          ```
          
          ### Test Results
          - ✅ 49/49 tests passing
          - ✅ All components tested (Lexer, Parser, AST, Runtime)
          - ✅ Security scanned with CodeQL
        draft: false
        prerelease: false
        
    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecengine-linux-x64.tar.gz
        asset_name: ecengine-linux-x64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecengine-win-x64.zip
        asset_name: ecengine-win-x64.zip
        asset_content_type: application/zip
        
    - name: Upload macOS x64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecengine-osx-x64.tar.gz
        asset_name: ecengine-osx-x64.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload macOS ARM64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ecengine-osx-arm64.tar.gz
        asset_name: ecengine-osx-arm64.tar.gz
        asset_content_type: application/gzip
