name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

# Environment variables used throughout the workflow
env:
  DOTNET_VERSION: '9.x'
  SOLUTION_PATH: 'ECEngine.csproj'
  CONFIGURATION: 'Release'

permissions:
  contents: read
  actions: read

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Build
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore
      
    - name: Run tests
      run: dotnet test ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --no-build --no-restore --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./TestResults
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}
      
    - name: Build Release
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --no-restore
      
    - name: Publish Linux x64
      run: dotnet publish ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --runtime linux-x64 --self-contained true --output ./publish/linux-x64 --no-restore -p:PublishAot=false
      
    - name: Publish Windows x64
      run: dotnet publish ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --runtime win-x64 --self-contained true --output ./publish/win-x64 --no-restore -p:PublishAot=false
      
    - name: Publish macOS x64
      run: dotnet publish ${{ env.SOLUTION_PATH }} --configuration ${{ env.CONFIGURATION }} --runtime osx-x64 --self-contained true --output ./publish/osx-x64 --no-restore -p:PublishAot=false
      
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-linux-x64
        path: ./publish/linux-x64/
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-win-x64
        path: ./publish/win-x64/
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-osx-x64
        path: ./publish/osx-x64/
