name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        dotnet-version: ['7.0.x', '8.0.x']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./TestResults
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    name: Build Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --configuration Release --no-restore
      
    - name: Publish Linux x64
      run: dotnet publish --configuration Release --runtime linux-x64 --self-contained true --output ./publish/linux-x64
      
    - name: Publish Windows x64
      run: dotnet publish --configuration Release --runtime win-x64 --self-contained true --output ./publish/win-x64
      
    - name: Publish macOS x64
      run: dotnet publish --configuration Release --runtime osx-x64 --self-contained true --output ./publish/osx-x64
      
    - name: Upload Linux artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-linux-x64
        path: ./publish/linux-x64/
        
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-win-x64
        path: ./publish/win-x64/
        
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: ecengine-osx-x64
        path: ./publish/osx-x64/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Security audit
      run: dotnet list package --vulnerable --include-transitive
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: csharp
        
    - name: Build for CodeQL
      run: dotnet build --configuration Release
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
