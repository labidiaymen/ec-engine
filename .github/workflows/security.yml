name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security scan weekly on Mondays at 3 AM UTC
    - cron: '0 3 * * 1'

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  codeql:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'csharp' ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build project
      run: dotnet build --configuration Release --no-restore
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{ matrix.language }}"
        
  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '7.0.x'
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Check for vulnerable packages
      run: |
        echo "Checking for vulnerable NuGet packages..."
        if dotnet list package --vulnerable --include-transitive 2>&1 | grep -q "has the following vulnerable packages"; then
          echo "❌ Vulnerable packages found!"
          dotnet list package --vulnerable --include-transitive
          exit 1
        else
          echo "✅ No vulnerable packages found."
        fi
        
    - name: Generate dependency report
      run: |
        echo "## Dependency Security Report" >> $GITHUB_STEP_SUMMARY
        echo "📦 **Package Audit Results**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        dotnet list package --include-transitive > packages.txt
        echo "```" >> $GITHUB_STEP_SUMMARY
        head -20 packages.txt >> $GITHUB_STEP_SUMMARY
        echo "```" >> $GITHUB_STEP_SUMMARY
        
    - name: Upload dependency list
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: packages.txt
